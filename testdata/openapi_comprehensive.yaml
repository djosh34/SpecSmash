openapi: 3.0.3
info:
  title: SpecSmash Comprehensive Requests
  version: 1.0.0
paths:
  /users:
    post:
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreate'
      responses:
        '200':
          description: ok
  /orders:
    post:
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderCreate'
      responses:
        '200':
          description: ok
  /events:
    post:
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventOneOf'
      responses:
        '200':
          description: ok
  /search:
    post:
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchAllOf'
      responses:
        '200':
          description: ok
  /metrics:
    post:
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Metrics'
      responses:
        '200':
          description: ok
components:
  schemas:
    ID:
      type: string
      format: uuid
    Email:
      type: string
      format: email
    Timestamp:
      type: string
      format: date-time
    UserCreate:
      type: object
      required: [id, email, profile]
      properties:
        id:
          $ref: '#/components/schemas/ID'
        email:
          $ref: '#/components/schemas/Email'
        profile:
          $ref: '#/components/schemas/Profile'
    Profile:
      type: object
      required: [name]
      properties:
        name:
          type: string
          minLength: 1
        birthDate:
          type: string
          format: date
          nullable: true
        website:
          type: string
          format: uri
          nullable: true
    Money:
      type: object
      required: [currency, amount]
      properties:
        currency:
          type: string
          enum: [USD, EUR, GBP]
        amount:
          type: number
          multipleOf: 0.01
          minimum: 0
    OrderItem:
      type: object
      required: [sku, qty]
      properties:
        sku:
          type: string
          pattern: '^[A-Z0-9_-]{3,20}$'
        qty:
          type: integer
          minimum: 1
        price:
          $ref: '#/components/schemas/Money'
    OrderCreate:
      type: object
      required: [orderId, items, createdAt]
      properties:
        orderId:
          type: string
          pattern: '^ORD-[0-9]{6}$'
        createdAt:
          $ref: '#/components/schemas/Timestamp'
        discountCode:
          type: string
          nullable: true
        items:
          type: array
          minItems: 1
          items:
            $ref: '#/components/schemas/OrderItem'
    SearchTerm:
      type: object
      properties:
        term:
          type: string
          minLength: 1
        fuzzy:
          type: boolean
          nullable: true
    SearchAllOf:
      allOf:
        - type: object
          required: [query]
          properties:
            query:
              $ref: '#/components/schemas/SearchTerm'
        - type: object
          properties:
            page:
              type: integer
              minimum: 1
            pageSize:
              type: integer
              minimum: 1
              maximum: 100
    EventBase:
      type: object
      required: [type, ts]
      properties:
        type:
          type: string
          enum: [click, purchase]
        ts:
          $ref: '#/components/schemas/Timestamp'
    ClickEvent:
      allOf:
        - $ref: '#/components/schemas/EventBase'
        - type: object
          required: [elementId]
          properties:
            elementId:
              type: string
    PurchaseEvent:
      allOf:
        - $ref: '#/components/schemas/EventBase'
        - type: object
          required: [amount]
          properties:
            amount:
              $ref: '#/components/schemas/Money'
    EventOneOf:
      oneOf:
        - $ref: '#/components/schemas/ClickEvent'
        - $ref: '#/components/schemas/PurchaseEvent'
    Metrics:
      type: object
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
        values:
          type: array
          items:
            type: number
            minimum: 0
            maximum: 100
        flags:
          type: array
          uniqueItems: true
          items:
            type: string
            enum: [a, b, c]

